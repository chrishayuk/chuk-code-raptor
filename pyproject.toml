[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chuk-code-raptor"
version = "0.1.0"
description = "Intelligent code chunking and analysis system for RAG applications"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "CodeRaptor Team", email = "team@coderagtor.dev"},
]
license = {text = "MIT"}
keywords = ["code-analysis", "chunking", "rag", "ast", "tree-sitter", "semantic"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Linguistic",
]

# Core dependencies - always required
dependencies = [
    "click>=8.2.1",
    "colorama>=0.4.6",
    "gitpython>=3.1.44",
    "networkx>=3.5",
    "numpy>=2.3.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "scipy>=1.16.0",
    "tqdm>=4.67.1",
    "tree-sitter>=0.24.8",
    "watchdog>=6.0.0",
    "tree-sitter-language-pack>=0.9.0",
]

[project.optional-dependencies]
# Language-specific parsers - install as needed
python = ["tree-sitter-python>=0.23.6"]
javascript = ["tree-sitter-javascript>=0.23.0"]
typescript = ["tree-sitter-javascript>=0.23.0"]  # Uses same parser as JavaScript
rust = ["tree-sitter-rust>=0.23.0"]
go = ["tree-sitter-go>=0.23.0"]
java = ["tree-sitter-java>=0.23.0"]
cpp = ["tree-sitter-cpp>=0.23.0"]
c = ["tree-sitter-c>=0.23.0"]

# Content parsers
markdown = ["tree-sitter-markdown>=0.2.3"]
html = ["tree-sitter-html>=0.23.2"]
json = ["tree-sitter-json>=0.24.8"]
xml = ["tree-sitter-xml>=0.7.0"]
css = ["tree-sitter-css>=0.23.2"]

# Development and testing
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Documentation
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

# Full installation with common languages
full = [
    "tree-sitter-python>=0.23.6",
    "tree-sitter-javascript>=0.23.0",
    "tree-sitter-rust>=0.23.0",
    "tree-sitter-markdown>=0.2.3",
    "tree-sitter-html>=0.23.0",
    "tree-sitter-json>=0.23.0",
]

# All available parsers
all = [
    "tree-sitter-python>=0.23.6",
    "tree-sitter-javascript>=0.23.0",
    "tree-sitter-rust>=0.23.0",
    "tree-sitter-go>=0.23.0",
    "tree-sitter-java>=0.23.0",
    "tree-sitter-cpp>=0.23.0",
    "tree-sitter-c>=0.23.0",
    "tree-sitter-markdown>=0.2.3",
    "tree-sitter-html>=0.23.0",
    "tree-sitter-json>=0.23.0",
    "tree-sitter-xml>=0.7.0",
    "tree-sitter-css>=0.23.2"
]

[project.urls]
Homepage = "https://github.com/your-org/chuk-code-raptor"
Documentation = "https://chuk-code-raptor.readthedocs.io/"
Repository = "https://github.com/your-org/chuk-code-raptor.git"
"Bug Tracker" = "https://github.com/your-org/chuk-code-raptor/issues"

[project.scripts]
chuk-chunk = "chuk_code_raptor.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["chuk_code_raptor*"]

[tool.setuptools.package-data]
"chuk_code_raptor.chunking.tree_sitter_chunker" = ["configs/*.yaml"]

# Development tool configurations
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["chuk_code_raptor"]
known_third_party = ["tree_sitter", "yaml", "pytest"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tree_sitter.*",
    "tree_sitter_python.*",
    "tree_sitter_javascript.*",
    "tree_sitter_rust.*",
    "tree_sitter_markdown.*",
    "tree_sitter_html.*",
    "tree_sitter_json.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=chuk_code_raptor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src/chuk_code_raptor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "psutil>=7.0.0",
]
